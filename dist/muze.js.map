{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","min","filteredValues","max","first","last","count","std","sqrt","mean","pow","num","defaultReducerName","ce","ReducerStore","TypeError","defReducer","entries","_this","reducer","_this2","__unregister","delete","Function","reducerStore","se","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","be","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ie","CategoricalParser","isInvalid","getInvalidType","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","Je","dataFormat","DSVArr","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","Qe","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","criteriaFn","derivative","op","meta","criteria","_derivation","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","clone","select","fn","saveChild","cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","at","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","wt","_fieldspace","updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","Ot","addField","addToNameSpace","isMutableAction","payload","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","pkg","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","objects","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len4","measureFieldNames","_key4","filteredReducers","getDerivations","getAncestorDerivations","nearestReducers","derv","GROUPBY","retrieveFieldDisplayName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","SUM","GROUP_BY_FUNCTIONS","COUNT","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","fieldObj","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","coord","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","listener_map_slicedToArray","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","transformedDataArr","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","lock","unlock","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","facetName","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","_ref5","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","stateStore","calculateDomainListener","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","updateCells","facetKey","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","rawFormat","transposedColKeys","sortDmTemporalFields","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","prevDm","sanitizedDm","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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AAIgvC,gCCESgX,kBAZK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACApT,IAAIgvC,gCCASgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,gBAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,gBAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,cAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,gBAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,IAAIgvC,gCCESgX,gBAVK,IAAIplD,MAAM,GAAGwS,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApT,I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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n        }\n        newDataModel._parent = this;\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n\n        newData.forEach((...params) => {\n            const key = this.idGetter ? this._idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const preset = propInfo[1].preset;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES } from 'muze-utils';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n\n        const { width, height } = this.smartTicks()[0];\n\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform,\n    domainCalculator\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data.rowId) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.rowId) !== -1);\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const uid = d.rowId;\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                enter: {},\n                update: {\n                    angle0: resolvedEncodings.angle0,\n                    angle: resolvedEncodings.angle,\n                    radius0: resolvedEncodings.radius0,\n                    radius: resolvedEncodings.radius\n                },\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                            .style('fill', d => d.color)\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, this._points, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y, ASCENDING, DESCENDING } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort[currentFieldName];\n                    const isSortingDisabled = config.sort.disabled;\n\n                    if (!isSortingDisabled && sortingOrder) {\n                        if (sortingOrder === ASCENDING) {\n                            domains[axisType][key].sort();\n                        } else if (sortingOrder === DESCENDING) {\n                            domains[axisType][key].sort().reverse();\n                        }\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facet\n * @param {Array} keys Array of the facet field values\n */\nexport const sortFacetFields = (facet, keys, config) => {\n    const facetName = `${facet}`;\n    const type = facet.type();\n\n    if (type === DIMENSION && config.sort[facetName]) {\n        if (config.sort[facetName] === 'asc') {\n            keys.sort((a, b) => a - b);\n        } else {\n            keys.sort((a, b) => b - a);\n        }\n    }\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst getValidSubtype = subtype => (!DimensionSubtype[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    keys.forEach((rKeys) => {\n        rKeys.forEach((key, idx) => {\n            rKeys[idx] = formatterList[idx](key);\n        });\n    });\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(rowFacets[0], firstLevelRowKeys, globalConfig);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(colFacets[0], firstLevelColumnKeys, globalConfig);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    (label) => {\n        const textCell = new cells.TextCell({}, { labelManager });\n        textCell.source(label);\n        return textCell;\n    }, headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`);\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n                                    ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {},\n                angle: {},\n                angle0: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            sanitization: (dm, prevDm) => {\n                prevDm && prevDm.dispose();\n                let sanitizedDm = dm;\n                if (dm instanceof DataModel) {\n                    sanitizedDm = dm.project(dm.getSchema().map(d => d.name));\n                }\n                return sanitizedDm;\n            }\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    sort: {\n        disabled: false\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store.model, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}