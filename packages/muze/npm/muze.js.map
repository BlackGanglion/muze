{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/es/lib.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/es/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/es/SmartlabelManager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","set","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivations","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","_value__WEBPACK_IMPORTED_MODULE_9__","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","dimensionArr","reducerFn","defConfig","NORMAL","uniqueFields","commonFields","fieldConfig","allFields","normalizedProjFieldSets","fieldSet","getNormalizedProFields","_toConsumableArray","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","INVERSE","ALL","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareSelectionData","resp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","_value__WEBPACK_IMPORTED_MODULE_2__","err","return","prepareJoinData","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_constants__WEBPACK_IMPORTED_MODULE_4__","_derivation","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","_defineProperty","_selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","rowSplitDiffsetIterator","fieldStoreObj","splitRowDiffset","dimensionMap","dimensionSet","keys","selectHelper","clonedDm","selectFn","selectorHelperFn","cloneWithAllFields","getKey","len","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","modelFieldsConfig","dataModel","keyFn","dataObj","dimensions","dLen","indices","measures","fieldsSpace","v","valuesMap","present","every","some","splitWithSelect","_selectHelper","clonedDMs","cloned","derivation","derivationFormula","addDiffsetToClonedDm","selectConfig","cloneWithSelect","cloneConfig","extraCloneDm","setOfRowDiffsets","cloneWithProject","projField","projectionSet","actualProjField","splitWithProject","projFieldSet","projFields","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","validateUnitSchema","supportedMeasureSubTypes","supportedDimSubTypes","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","valueObjects","fieldInSchema","getDerivationArguments","applyExistingOperationOnModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","getRootGroupByModel","find","getRootDataModel","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","normalizedProjField","from","trim","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_constants__WEBPACK_IMPORTED_MODULE_1__","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","_enums__WEBPACK_IMPORTED_MODULE_2__","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","defaultReducerName","getFieldArr","getReducerObj","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","dbName","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","webpackPolyfill","deprecate","paths","default","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","slice","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","Muze","require","ascending","NaN","bisector","compare","ascendingComparator","x","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","ceil","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","floor","power","log","LN10","error","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","clear","entries","size","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","round","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","padding","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","split","interpolateTransformSvg","parseSvg","createElementNS","setAttribute","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","width","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","charAt","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","top","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","context","spacing","range0","range1","position","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","parentNode","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","DimensionSubtype","STRING","FUNCTION","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","id","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","_accessors","fn1","fn2","xhtml","src_namespaces","svg","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","insertBefore","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","textContent","htmlRemove","innerHTML","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","setAttributeNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","init","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","styleObj","setElementAttrs","attrs","setAttrs","className","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","fontSize","fontFamily","fontWeight","fontStyle","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","depProps","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","lib","doc","userAgent","navigator","clsNameSpace","containerClass","classNameWithTag","classNameWithTagBR","maxDefaultCacheLimit","classNameReg","classNameBrReg","spanAdditionRegx","spanAdditionReplacer","spanRemovalRegx","xmlTagRegEx","brRegex","ltgtRegex","htmlSpecialEntityRegex","brReplaceRegex","testStrAvg","parentContainerStyle","whiteSpace","height","overflow","supportedStyle","font","font-family","font-weight","font-size","lineHeight","line-height","font-style","getDocumentSupport","childRetriverFn","childRetriverString","noClassTesting","getElementsByClassName","isIE","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","isHeadLess","isWebKit","createContainer","containerParent","body","offsetWidth","offsetHeight","getElementsByTagName","getNearestBreakIndex","maxWidth","sl","getWidth","_getWidthFn","charLen","increment","oriWidth","avgWidth","substr","parseStyle","parsedStyle","fontVariant","setLineHeight","fSize","_getCleanHeight","_getDimentionUsingDiv","_container","_getDimentionUsingCanvas","ctx","measureText","_hasOnlyBRTag","_getDimentionOfMultiLineText","textWidth","rawText","textAr","_getTextArray","textHeight","indiSizeStore","detailObj","tempLen","brText","tempText","finaltextAr","_findLastIndex","slLib","documentSupport","SVG_BBOX_CORRECTION","ContainerManager","parentContainer","isBrowserLess","maxContainers","containers","rootNode","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","_makeDivNode","display","avgCharWidth","svgText","getBBox","ellipsesWidth","dotWidth","charCache","cObj","dispose","htmlSplCharSpace"," ","SmartLabelManager","useEllipses","wrapper","canvas","maxCacheLimit","getElementById","getContext","_containerManager","_showNoEllipses","_init","oldStyle","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","tw","twi","cachedStyle","asymmetricDifference","cache","advancedCacheKey","cacheName","cacheInitName","maxAdvancedCacheLimit","_advancedCache","_advancedCacheKey","_getDimention","repeat","shift","requireDiv","_containerObj","bbox","_isSameStyle","_setStyleOfCanvas","hashString","sCont","_cache","_lineHeight","_styleNotSet","_setStyleOfDiv","_updateStyle","useEllipsesOnOverflow","getSmartText","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriHeight","newCharIndex","nearestChar","tempChar","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","hasOnlyBrTag","dimentionObj","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","getOriSize","cleanText","tooltext","spaceIdx","dashIdx","offsetLeft","offsetTop","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getKeyValue","keyObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","colorAxis","shapeAxis","sizeAxis","retField","retIndex","retinalFieldValue","measuresArr","icon","getColor","getShape","getSize","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","measure","measureIndex","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","FieldType","containsDetailField","getFieldInf","timeDiffs","defFormatter","nf","getTabularData","allMeasures","_construct","filteredMeasures","generateTooltipContent","nestedData","_fieldInf$field","formattedValue","_loop2","len2","_fieldInf$name","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","lastIndexOf","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","uniqueVals","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","transformResolverPredicates","groupByField","dimensionField","resolveInvalidTransformType","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref5","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","sourceBehaviours","persistent","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","cIdx","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrder","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","facetNames","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,+BAESgY,cAAKK,aCZTA,YAAS,IAAI3pD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,+BAESgY,cAAKK,aCZTA,YAAS,IAAI3pD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,+BAESgY,cAAKK,aCALL,cAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCESgY,cAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCESgY,cAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCESgY,gBAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCESgY,gBAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCESgY,kBAZK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAIg3C,gCCASgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,gBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,gBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,cAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,gBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,gBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCRKqY,aAAS,IAAI3pD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,+BAESgY,eAAKK,cCALL,gBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,eAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAIg3C,gCCESgY,iBAVK,IAAItpD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0D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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].value === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nexport {\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","var lib={init:function init(win){var doc=win.document,nav=win.navigator,userAgent=nav.userAgent,DIV=\"DIV\",ceil=Math.ceil,floor=Math.floor,clsNameSpace=\"fusioncharts-smartlabel-\",containerClass=clsNameSpace+\"container\",classNameWithTag=clsNameSpace+\"tag\",classNameWithTagBR=clsNameSpace+\"br\";lib={win:win,containerClass:containerClass,classNameWithTag:classNameWithTag,classNameWithTagBR:classNameWithTagBR,maxDefaultCacheLimit:1000,classNameReg:/\\bfusioncharts-smartlabel-tag\\b/,classNameBrReg:/\\bfusioncharts-smartlabel-br\\b/,spanAdditionRegx:/(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,spanAdditionReplacer:\"$1<span class=\\\"\"+classNameWithTag+\"\\\">$2</span>\",spanRemovalRegx:new RegExp(\"\\\\<span[^\\\\>]+?\"+classNameWithTag+\"[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>\",\"ig\"),xmlTagRegEx:new RegExp(\"<[^>][^<]*[^>]+>\",\"i\"),brRegex:new RegExp(\"({br[ ]*})|(<br[ ]*>)|(<br[ ]*/>)|(<BR[ ]*/>)|(<br\\\\>)\",\"g\"),ltgtRegex:/&lt;|&gt;/g,htmlSpecialEntityRegex:/&amp;|&quot;|&lt;|&gt;/g,brReplaceRegex:/<br\\/>/ig,testStrAvg:\"WgI\",parentContainerStyle:{position:\"absolute\",top:\"-9999em\",whiteSpace:\"nowrap\",padding:\"0px\",width:\"1px\",height:\"1px\",overflow:\"hidden\"},supportedStyle:{font:\"font\",fontFamily:\"font-family\",\"font-family\":\"font-family\",fontWeight:\"font-weight\",\"font-weight\":\"font-weight\",fontSize:\"font-size\",\"font-size\":\"font-size\",lineHeight:\"line-height\",\"line-height\":\"line-height\",fontStyle:\"font-style\",\"font-style\":\"font-style\"},getDocumentSupport:function getDocumentSupport(){var childRetriverFn,childRetriverString,noClassTesting;if(doc.getElementsByClassName){childRetriverFn=\"getElementsByClassName\";childRetriverString=classNameWithTag;noClassTesting=true}else{childRetriverFn=\"getElementsByTagName\";childRetriverString=\"span\";noClassTesting=false}return{isIE:/msie/i.test(userAgent)&&!win.opera,hasSVG:Boolean(win.SVGAngle||doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")),isHeadLess:new RegExp(\" HtmlUnit\").test(userAgent),isWebKit:new RegExp(\" AppleWebKit/\").test(userAgent),childRetriverFn:childRetriverFn,childRetriverString:childRetriverString,noClassTesting:noClassTesting}},createContainer:function createContainer(containerParent){var body,container;if(containerParent&&(containerParent.offsetWidth||containerParent.offsetHeight)){if(containerParent.appendChild){containerParent.appendChild(container=doc.createElement(DIV));container.className=containerClass;container.setAttribute(\"aria-hidden\",\"true\");container.setAttribute(\"role\",\"presentation\");return container}}else{body=doc.getElementsByTagName(\"body\")[0];if(body&&body.appendChild){container=doc.createElement(DIV);container.className=containerClass;container.setAttribute(\"aria-hidden\",\"true\");container.setAttribute(\"role\",\"presentation\");body.appendChild(container);return container}}},getNearestBreakIndex:function getNearestBreakIndex(text,maxWidth,sl){if(!text||!text.length){return 0}var difference,getWidth=sl._getWidthFn(),charLen=0,increment=0,oriWidth=getWidth(text),avgWidth=oriWidth/text.length;difference=maxWidth;charLen=ceil(maxWidth/avgWidth);if(oriWidth<maxWidth){return text.length-1}if(charLen>text.length){difference=maxWidth-oriWidth;charLen=text.length}while(difference>0){difference=maxWidth-getWidth(text.substr(0,charLen));increment=floor(difference/avgWidth);if(increment){charLen+=increment}else{return charLen}}while(difference<0){difference=maxWidth-getWidth(text.substr(0,charLen));increment=floor(difference/avgWidth);if(increment){charLen+=increment}else{return charLen}}return charLen},parseStyle:function parseStyle(){var style=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var parsedStyle={};parsedStyle.fontSize=(style.fontSize||style[\"font-size\"]||\"12px\")+\"\";parsedStyle.fontVariant=style.fontVariant||style[\"font-variant\"]||\"normal\";parsedStyle.fontWeight=style.fontWeight||style[\"font-weight\"]||\"normal\";parsedStyle.fontStyle=style.fontStyle||style[\"font-style\"]||\"normal\";parsedStyle.fontFamily=style.fontFamily||style[\"font-family\"]||\"Verdana,sans\";return parsedStyle},setLineHeight:function setLineHeight(styleObj){var fSize=styleObj.fontSize;styleObj.lineHeight=styleObj.lineHeight||styleObj[\"line-height\"]||parseInt(fSize,10)*1.2+\"px\";return styleObj},_getCleanHeight:function _getCleanHeight(height){height=height.replace(/px/g,\"\");return Number(height)},_getDimentionUsingDiv:function _getDimentionUsingDiv(){var text=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var sl=arguments.length>1?arguments[1]:undefined;var container=sl._container;if(text instanceof Array){text=text.join(\"\")}container.innerHTML=text;return{width:container.offsetWidth,height:container.offsetHeight}},_getDimentionUsingCanvas:function _getDimentionUsingCanvas(){var text=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var sl=arguments.length>1?arguments[1]:undefined;var ctx=sl.ctx,style=sl.style,height=lib._getCleanHeight(style.lineHeight);if(!(text instanceof Array)){text=text.replace(/<br \\/>/g,\"\")}else{text=text.join(\"\");text=text.replace(/<br \\/>/g,\"\")}return{width:ctx.measureText(text).width,height:height}},_hasOnlyBRTag:function _hasOnlyBRTag(){var input=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return!lib.xmlTagRegEx.test(input)&&lib.brRegex.test(input)},_getDimentionOfMultiLineText:function _getDimentionOfMultiLineText(){var rawText=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var sl=arguments.length>1?arguments[1]:undefined;var i,len,text=rawText.replace(lib.brRegex,\"<br />\"),textAr=lib._getTextArray(text),width=0,maxWidth=0,getWidth=sl._getWidthFn(),height=lib._getCleanHeight(sl.style.lineHeight),textHeight=height,textWidth,indiSizeStore={};for(i=0,len=textAr.length;i<len;i++){if(textAr[i]===\"<br />\"){maxWidth=Math.max(maxWidth,width);width=0;textHeight+=height}else{textWidth=getWidth(textAr[i]);width+=textWidth;indiSizeStore[textAr[i]]=textWidth}}maxWidth=Math.max(maxWidth,width);return{height:textHeight,width:maxWidth,detailObj:indiSizeStore}},_getTextArray:function _getTextArray(){var text=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var i,j,len,tempLen,brText,tempText,finaltextAr=[];brText=text.split(\"<br />\");len=brText.length;for(i=0;i<len;i++){tempText=brText[i].split(\"\");tempLen=tempText.length;for(j=0;j<tempLen;j++){finaltextAr.push(tempText[j])}if(i!==len-1){finaltextAr.push(\"<br />\")}}return finaltextAr},_findLastIndex:function _findLastIndex(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var item=arguments.length>1?arguments[1]:undefined;var i,len=array.length;for(i=len-1;i>=0;i--){if(array[i]===item){return i}}return-1}};return lib}};export default lib;","import lib from\"./lib\";var slLib=lib.init(window),doc=slLib.win.document,documentSupport=slLib.getDocumentSupport(),SVG_BBOX_CORRECTION=documentSupport.isWebKit?0:4.5;function ContainerManager(parentContainer,isBrowserLess,maxContainers){var svg;maxContainers=maxContainers>5?maxContainers:5;maxContainers=maxContainers<20?maxContainers:20;this.maxContainers=maxContainers;this.first=null;this.last=null;this.containers={};this.length=0;this.rootNode=parentContainer;if(isBrowserLess){svg=doc.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");svg.setAttributeNS(\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\");svg.setAttributeNS(\"http://www.w3.org/2000/svg\",\"height\",\"0\");svg.setAttributeNS(\"http://www.w3.org/2000/svg\",\"width\",\"0\");this.svgRoot=svg;this.rootNode.appendChild(svg)}}ContainerManager.prototype.get=function(style){var diff,key,containerObj,containers=this.containers,len=this.length,max=this.maxContainers,keyStr=\"\";for(key in slLib.supportedStyle){if(style[key]!==undefined){keyStr+=slLib.supportedStyle[key]+\":\"+style[key]+\";\"}}if(!keyStr){return false}if(containerObj=containers[keyStr]){if(this.first!==containerObj){if(containerObj.prev){containerObj.prev.next=containerObj.next}if(containerObj.next){containerObj.next.prev=containerObj.prev}containerObj.next=this.first;containerObj.next.prev=containerObj;if(this.last===containerObj){this.last=containerObj.prev}containerObj.prev=null;this.first=containerObj}}else{if(len>=max){diff=len-max+1;while(diff--){this.removeContainer(this.last)}}containerObj=this.addContainer(keyStr)}return containerObj};ContainerManager.prototype._makeDivNode=function(container){var node,keyStr=container.keyStr;if(!container.node){container.node=doc.createElement(\"div\");container.node.className=\"fusioncharts-div\";this.rootNode.appendChild(container.node)}node=container.node;if(documentSupport.isIE&&!documentSupport.hasSVG){node.style.setAttribute(\"cssText\",keyStr)}else{node.setAttribute(\"style\",keyStr)}node.setAttribute(\"aria-hidden\",\"true\");node.setAttribute(\"role\",\"presentation\");node.style.display=\"inline-block\";node.innerHTML=slLib.testStrAvg;container.lineHeight=node.offsetHeight;container.avgCharWidth=node.offsetWidth/3;if(documentSupport.isBrowserLess){if(!container.svgText){container.svgText=doc.createElementNS(\"http://www.w3.org/2000/svg\",\"text\");this.svgRoot.appendChild(node)}node=container.svgText;node.setAttribute(\"style\",keyStr);node.textContent=slLib.testStrAvg;container.lineHeight=node.getBBox().height;container.avgCharWidth=(node.getBBox().width-SVG_BBOX_CORRECTION)/3;node.textContent=\"...\";container.ellipsesWidth=node.getBBox().width-SVG_BBOX_CORRECTION;node.textContent=\".\";container.dotWidth=node.getBBox().width-SVG_BBOX_CORRECTION}else{node.innerHTML=\"...\";container.ellipsesWidth=node.offsetWidth;node.innerHTML=\".\";container.dotWidth=node.offsetWidth;node.innerHTML=\"\"}};ContainerManager.prototype.addContainer=function(keyStr){var container;this.containers[keyStr]=container={next:null,prev:null,node:null,ellipsesWidth:0,lineHeight:0,dotWidth:0,avgCharWidth:4,keyStr:keyStr,charCache:{}};container.next=this.first;if(container.next){container.next.prev=container}this.first=container;if(!this.last){this.last=container}this.length+=1;return container};ContainerManager.prototype.removeContainer=function(cObj){var keyStr=cObj.keyStr;if(!keyStr||!this.length||!cObj){return}this.length-=1;if(cObj.prev){cObj.prev.next=cObj.next}if(cObj.next){cObj.next.prev=cObj.prev}if(this.first===cObj){this.first=cObj.next}if(this.last===cObj){this.last=cObj.prev}if(cObj.node){cObj.node.parentNode.removeChild(cObj.node)}delete this.containers[keyStr]};ContainerManager.prototype.dispose=function(){var key,containers=this.containers;this.maxContainers=null;for(key in containers){this.removeContainer(containers[key])}this.rootNode.parentNode.removeChild(this.rootNode);this.rootNode=null;this.first=null;this.last=null};export default ContainerManager;","import lib from\"./lib\";import ContainerManager from\"./container-manager\";var slLib=lib.init(window),doc=slLib.win.document,M=slLib.win.Math,max=M.max,round=M.round,htmlSplCharSpace={\" \":\"&nbsp;\"},documentSupport=slLib.getDocumentSupport(),SVG_BBOX_CORRECTION=documentSupport.isWebKit?0:4.5;function SmartLabelManager(container,useEllipses,options){var wrapper,prop,max,isBrowserLess=false,canvas=window.document.createElement(\"canvas\");options=options||{};options.maxCacheLimit=isFinite(max=options.maxCacheLimit)?max:slLib.maxDefaultCacheLimit;if(typeof container===\"string\"){container=doc.getElementById(container)}wrapper=slLib.createContainer(container);wrapper.innerHTML=slLib.testStrAvg;if(documentSupport.isHeadLess||!documentSupport.isIE&&!wrapper.offsetHeight&&!wrapper.offsetWidth){isBrowserLess=true}wrapper.innerHTML=\"\";for(prop in slLib.parentContainerStyle){wrapper.style[prop]=slLib.parentContainerStyle[prop]}this.parentContainer=wrapper;this.ctx=canvas&&canvas.getContext&&canvas.getContext(\"2d\");this._containerManager=new ContainerManager(wrapper,isBrowserLess,10);this._showNoEllipses=!useEllipses;this._init=true;this.style={};this.oldStyle={};this.options=options;this.setStyle()}SmartLabelManager.textToLines=function(smartlabel){smartlabel=smartlabel||{};if(!smartlabel.text){smartlabel.text=\"\"}else if(typeof smartlabel.text!==\"string\"){smartlabel.text=smartlabel.text.toString()}smartlabel.lines=smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);return smartlabel};SmartLabelManager.prototype._calCharDimWithCache=function(){var text=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var calculateDifference=arguments.length>1?arguments[1]:undefined;var length=arguments.length>2?arguments[2]:undefined;if(!this._init){return false}var size,tw,twi,cachedStyle,asymmetricDifference,maxAdvancedCacheLimit=this.options.maxCacheLimit,style=this.style||{},cache,advancedCacheKey,cacheName,cacheInitName;cache=this._advancedCache=this._advancedCache||(this._advancedCache={});advancedCacheKey=this._advancedCacheKey||(this._advancedCacheKey=[]);cacheName=text+style.fontSize+style.fontFamily+style.fontWeight+style.fontStyle;cacheInitName=text+\"init\"+style.fontSize+style.fontFamily+style.fontWeight+style.fontStyle;if(!this.ctx&&htmlSplCharSpace[text]){text=htmlSplCharSpace[text]}if(!calculateDifference){asymmetricDifference=0}else{if((asymmetricDifference=cache[cacheInitName])===undefined){tw=this._getDimention(text.repeat?text.repeat(length):Array(length+1).join(text)).width;twi=this._getDimention(text).width;asymmetricDifference=cache[cacheInitName]=(tw-length*twi)/(length+1);advancedCacheKey.push(cacheInitName);if(advancedCacheKey.length>maxAdvancedCacheLimit){delete cache[advancedCacheKey.shift()]}}}if(cachedStyle=cache[cacheName]){return{width:cachedStyle.width,height:cachedStyle.height}}size=this._getDimention(text);size.width+=asymmetricDifference;cache[cacheName]={width:size.width,height:size.height};advancedCacheKey.push(cacheName);if(advancedCacheKey.length>maxAdvancedCacheLimit){delete cache[advancedCacheKey.shift()]}return size};SmartLabelManager.prototype._getDimention=function(text){if(this.requireDiv||!this.ctx){return slLib._getDimentionUsingDiv(text,this)}else{return slLib._getDimentionUsingCanvas(text,this)}};SmartLabelManager.prototype._getWidthFn=function(){var sl=this,contObj=sl._containerObj,svgText=contObj.svgText;if(svgText){return function(str){var bbox,width;svgText.textContent=str;bbox=svgText.getBBox();width=bbox.width-SVG_BBOX_CORRECTION;if(width<1){width=bbox.width}return width}}else{return function(str){if(sl.requireDiv||!sl.ctx){return slLib._getDimentionUsingDiv(str,sl).width}else{return slLib._getDimentionUsingCanvas(str,sl).width}}}};SmartLabelManager.prototype._isSameStyle=function(){var sl=this,oldStyle=sl.oldStyle||{},style=sl.style;if(style.fontSize!==oldStyle.fontSize||style.fontFamily!==oldStyle.fontFamily||style.fontStyle!==oldStyle.fontStyle||style.fontWeight!==oldStyle.fontWeight||style.fontVariant!==oldStyle.fontVariant){return false}return true};SmartLabelManager.prototype._setStyleOfCanvas=function(){if(this._isSameStyle()){return}var sl=this,style=sl.style,hashString,sCont,fontStyle=style.fontStyle,fontVariant=style.fontVariant,fontWeight=style.fontWeight,fontSize=style.fontSize,fontFamily=style.fontFamily;fontSize+=fontSize.indexOf(\"px\")===-1?\"px\":\"\";hashString=fontStyle+\" \"+fontVariant+\" \"+fontWeight+\" \"+fontSize+\" \"+fontFamily;sl.ctx.font=hashString;sCont=this._containerObj=this._containerManager.get(style);if(this._containerObj){this._container=sCont.node;this._context=sCont.context;this._cache=sCont.charCache;this._lineHeight=sCont.lineHeight;this._styleNotSet=false}else{this._styleNotSet=true}sCont.ellipsesWidth=sl._calCharDimWithCache(\"...\",false).width;sCont.dotWidth=sl._calCharDimWithCache(\".\",false).width;sCont.lineHeight=this._lineHeight=sCont.lineHeight||slLib._getCleanHeight(style.lineHeight);this.oldStyle=style};SmartLabelManager.prototype._setStyleOfDiv=function(){var sCont,style=this.style;this._containerObj=sCont=this._containerManager.get(style);if(!sCont.node){this._containerManager._makeDivNode(this._containerObj)}if(this._containerObj){this._container=sCont.node;this._context=sCont.context;this._cache=sCont.charCache;this._lineHeight=sCont.lineHeight;this._styleNotSet=false}else{this._styleNotSet=true}};SmartLabelManager.prototype._updateStyle=function(){return this.requireDiv||!this.ctx?this._setStyleOfDiv():this._setStyleOfCanvas()};SmartLabelManager.prototype.setStyle=function(style){this.style=slLib.parseStyle(style);slLib.setLineHeight(this.style);return this};SmartLabelManager.prototype.useEllipsesOnOverflow=function(useEllipses){if(!this._init){return this}this._showNoEllipses=!useEllipses;return this};SmartLabelManager.prototype.getSmartText=function(text,maxWidth,maxHeight,noWrap){if(!this._init){return false}if(text===undefined||text===null){text=\"\"}else if(typeof text!==\"string\"){text=text.toString()}var len,trimStr,tempArr,tmpText,maxWidthWithEll,toolText,oriWidth,oriHeight,newCharIndex,nearestChar,tempChar,getWidth,initialLeft,initialTop,getOriSizeImproveObj,spanArr,x,y,minWidth,elem,chr,elemRightMostPoint,elemLowestPoint,lastBR,removeFromIndex,removeFromIndexForEllipses,hasHTMLTag=false,maxStrWidth=0,lastDash=-1,lastSpace=-1,lastIndexBroken=-1,strWidth=0,strHeight=0,oriTextArr=[],i=0,ellipsesStr=this._showNoEllipses?\"\":\"...\",lineHeight,context,container,sCont,ellipsesWidth,dotWidth,canvas=this.ctx,characterArr=[],dashIndex=-1,spaceIndex=-1,lastLineBreak=-1,hasOnlyBrTag,dimentionObj,fastTrim=function fastTrim(str){str=str.replace(/^\\s\\s*/,\"\");var ws=/\\s/,i=str.length;while(ws.test(str.charAt(i-=1))){}return str.slice(0,i+1)},smartLabel={text:text,maxWidth:maxWidth,maxHeight:maxHeight,width:null,height:null,oriTextWidth:null,oriTextHeight:null,oriText:text,isTruncated:false};hasHTMLTag=slLib.xmlTagRegEx.test(text);hasOnlyBrTag=slLib._hasOnlyBRTag(text);this.requireDiv=hasHTMLTag&&!hasOnlyBrTag;this._updateStyle();lineHeight=this._lineHeight;context=this._context;container=this._container;sCont=this._containerObj;ellipsesWidth=sCont.ellipsesWidth;dotWidth=sCont.dotWidth;toolText=text.replace(slLib.spanAdditionRegx,\"$2\");getWidth=this._getWidthFn();if(lineHeight-maxHeight<=1&&lineHeight-maxHeight>=0){maxHeight*=1.2}if(canvas||container){if(!documentSupport.isBrowserLess){if(!hasHTMLTag){tmpText=text=text.replace(slLib.ltgtRegex,function(match){return match===\"&lt;\"?\"<\":\">\"});getOriSizeImproveObj=this.getOriSize(tmpText,true,{hasHTMLTag:hasHTMLTag,hasOnlyBrTag:hasOnlyBrTag,cleanText:true});smartLabel.oriTextWidth=oriWidth=getOriSizeImproveObj.width;smartLabel.oriTextHeight=oriHeight=getOriSizeImproveObj.height}else if(hasOnlyBrTag){text=text.replace(slLib.brRegex,\"<br />\");dimentionObj=slLib._getDimentionOfMultiLineText(text,this);smartLabel.oriTextWidth=oriWidth=dimentionObj.width;smartLabel.oriTextHeight=oriHeight=dimentionObj.height}else{container.innerHTML=text;smartLabel.oriTextWidth=oriWidth=container.offsetWidth;smartLabel.oriTextHeight=oriHeight=container.offsetHeight}if(oriHeight<=maxHeight&&oriWidth<=maxWidth){smartLabel.width=smartLabel.oriTextWidth=oriWidth;smartLabel.height=smartLabel.oriTextHeight=oriHeight;return smartLabel}if(lineHeight>maxHeight){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=0;smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}}text=fastTrim(text).replace(/(\\s+)/g,\" \");maxWidthWithEll=this._showNoEllipses?maxWidth:maxWidth-ellipsesWidth;if(!hasHTMLTag||hasOnlyBrTag){oriTextArr=slLib._getTextArray(text);len=oriTextArr.length;trimStr=\"\";tempArr=[];tempChar=oriTextArr[0];if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{minWidth=getWidth(tempChar);this._cache[tempChar]={width:minWidth}}if(maxWidthWithEll>minWidth&&!hasOnlyBrTag){tempArr=text.substr(0,slLib.getNearestBreakIndex(text,maxWidthWithEll,this)).split(\"\")}else if(minWidth>maxWidth){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}else if(ellipsesStr){maxWidthWithEll=maxWidth-2*dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\"..\"}else{maxWidthWithEll=maxWidth-dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\".\"}else{maxWidthWithEll=0;ellipsesStr=\"\"}}}i=tempArr.length;strWidth=getWidth(tempArr.join(\"\"));strHeight=this._lineHeight;if(noWrap){for(;i<len;i+=1){tempChar=tempArr[i]=oriTextArr[i];if(tempArr[i]===\"<br />\"){strHeight+=this._lineHeight;lastIndexBroken=i;maxStrWidth=max(maxStrWidth,strWidth);strWidth=0;trimStr=null;continue}if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{if(!getOriSizeImproveObj||!(minWidth=getOriSizeImproveObj.detailObj[tempChar])){minWidth=getWidth(tempChar)}this._cache[tempChar]={width:minWidth}}strWidth+=minWidth;if(strWidth>maxWidthWithEll){if(!trimStr){trimStr=tempArr.slice(0,-1).join(\"\")}if(strWidth>maxWidth){smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=smartLabel.oriText;smartLabel.width=max(maxStrWidth,strWidth);smartLabel.height=strHeight;return smartLabel}}}smartLabel.text=tempArr.join(\"\");smartLabel.width=max(maxStrWidth,strWidth);smartLabel.height=strHeight;return smartLabel}else{for(;i<len;i+=1){tempChar=tempArr[i]=oriTextArr[i];if(tempChar===\" \"&&!context){tempChar=this.ctx?\" \":\"&nbsp;\"}if(tempArr[i]===\"<br />\"){maxStrWidth=max(maxStrWidth,strWidth);strHeight+=this._lineHeight;if(strHeight<=maxHeight){lastIndexBroken=i;strWidth=0;trimStr=null;continue}else if(strHeight>maxHeight){trimStr=tempArr.slice(0,-1).join(\"\");smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=toolText;smartLabel.width=maxStrWidth;smartLabel.height=strHeight-this._lineHeight;return smartLabel}}if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{if(!getOriSizeImproveObj||!(minWidth=getOriSizeImproveObj.detailObj[tempChar])){minWidth=getWidth(tempChar)}this._cache[tempChar]={width:minWidth}}strWidth+=minWidth;if(strWidth>maxWidthWithEll){if(!trimStr){trimStr=tempArr.slice(0,-1).join(\"\")}if(strWidth>maxWidth){if(oriTextArr[i+1]===\"<br />\"){continue}lastSpace=slLib._findLastIndex(oriTextArr.slice(0,tempArr.length),\" \");lastDash=slLib._findLastIndex(oriTextArr.slice(0,tempArr.length),\"-\");if(lastSpace>lastIndexBroken){strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastSpace,1,\"<br />\");lastIndexBroken=lastSpace;newCharIndex=lastSpace+1}else if(lastDash>lastIndexBroken){if(lastDash===tempArr.length-1){strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastDash,1,\"<br />-\")}else{strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastDash,1,\"-<br />\")}lastIndexBroken=lastDash;newCharIndex=lastDash+1}else{tempArr.splice(tempArr.length-1,1,\"<br />\"+oriTextArr[i]);lastLineBreak=tempArr.length-2;strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastLineBreak+1).join(\"\"));lastIndexBroken=lastLineBreak;newCharIndex=i}strHeight+=this._lineHeight;if(strHeight>maxHeight){smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=smartLabel.oriText;smartLabel.width=maxWidth;smartLabel.height=strHeight-this._lineHeight;return smartLabel}else{maxStrWidth=max(maxStrWidth,strWidth);trimStr=null;if(!hasOnlyBrTag){nearestChar=slLib.getNearestBreakIndex(text.substr(newCharIndex),maxWidthWithEll,this);strWidth=getWidth(text.substr(newCharIndex,nearestChar||1));if(tempArr.length<newCharIndex+nearestChar){tempArr=tempArr.concat(text.substr(tempArr.length,newCharIndex+nearestChar-tempArr.length).split(\"\"));i=tempArr.length-1}}else{strWidth=slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken+1).join(\"\"),this).width}}}}}maxStrWidth=max(maxStrWidth,strWidth);smartLabel.text=tempArr.join(\"\");smartLabel.width=maxStrWidth;smartLabel.height=strHeight;return smartLabel}}else{toolText=text.replace(slLib.spanAdditionRegx,\"$2\");text=text.replace(slLib.spanAdditionRegx,slLib.spanAdditionReplacer);text=text.replace(/(<br\\s*\\/*\\>)/g,\"<span class=\\\"\"+[slLib.classNameWithTag,\" \",slLib.classNameWithTagBR].join(\"\")+\"\\\">$1</span>\");container.innerHTML=text;spanArr=container[documentSupport.childRetriverFn](documentSupport.childRetriverString);for(x=0,y=spanArr.length;x<y;x+=1){elem=spanArr[x];if(documentSupport.noClassTesting||slLib.classNameReg.test(elem.className)){chr=elem.innerHTML;if(chr!==\"\"){if(chr===\" \"){spaceIndex=characterArr.length}else if(chr===\"-\"){dashIndex=characterArr.length}characterArr.push({spaceIdx:spaceIndex,dashIdx:dashIndex,elem:elem});oriTextArr.push(chr)}}}i=0;len=characterArr.length;minWidth=len&&characterArr[0].elem.offsetWidth;if(minWidth>maxWidth||!len){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}else if(minWidth>maxWidthWithEll&&!this._showNoEllipses){maxWidthWithEll=maxWidth-2*dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\"..\"}else{maxWidthWithEll=maxWidth-dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\".\"}else{maxWidthWithEll=0;ellipsesStr=\"\"}}}initialLeft=characterArr[0].elem.offsetLeft;initialTop=characterArr[0].elem.offsetTop;if(noWrap){for(;i<len;i+=1){elem=characterArr[i].elem;elemRightMostPoint=elem.offsetLeft-initialLeft+elem.offsetWidth;if(elemRightMostPoint>maxWidthWithEll){if(!removeFromIndexForEllipses){removeFromIndexForEllipses=i}if(container.offsetWidth>maxWidth){removeFromIndex=i;i=len}}}}else{for(;i<len;i+=1){elem=characterArr[i].elem;elemLowestPoint=elem.offsetHeight+(elem.offsetTop-initialTop);elemRightMostPoint=elem.offsetLeft-initialLeft+elem.offsetWidth;lastBR=null;if(elemRightMostPoint>maxWidthWithEll){if(!removeFromIndexForEllipses){removeFromIndexForEllipses=i}if(elemRightMostPoint>maxWidth){lastSpace=characterArr[i].spaceIdx;lastDash=characterArr[i].dashIdx;if(lastSpace>lastIndexBroken){characterArr[lastSpace].elem.innerHTML=\"<br/>\";lastIndexBroken=lastSpace}else if(lastDash>lastIndexBroken){if(lastDash===i){characterArr[lastDash].elem.innerHTML=\"<br/>-\"}else{characterArr[lastDash].elem.innerHTML=\"-<br/>\"}lastIndexBroken=lastDash}else{elem.parentNode.insertBefore(lastBR=doc.createElement(\"br\"),elem)}if(elem.offsetHeight+elem.offsetTop>maxHeight){if(lastBR){lastBR.parentNode.removeChild(lastBR)}else if(lastIndexBroken===lastDash){characterArr[lastDash].elem.innerHTML=\"-\"}else{characterArr[lastSpace].elem.innerHTML=\" \"}removeFromIndex=i;i=len}else{removeFromIndexForEllipses=null}}}else{if(elemLowestPoint>maxHeight){removeFromIndex=i;i=len}}}}if(removeFromIndex<len){smartLabel.isTruncated=true;removeFromIndexForEllipses=removeFromIndexForEllipses?removeFromIndexForEllipses:removeFromIndex;for(i=len-1;i>=removeFromIndexForEllipses;i-=1){elem=characterArr[i].elem;elem.parentNode.removeChild(elem)}for(;i>=0;i-=1){elem=characterArr[i].elem;if(slLib.classNameBrReg.test(elem.className)){elem.parentNode.removeChild(elem)}else{i=0}}}smartLabel.text=container.innerHTML.replace(slLib.spanRemovalRegx,\"$1\").replace(/\\&amp\\;/g,\"&\");if(smartLabel.isTruncated){smartLabel.text+=ellipsesStr;smartLabel.tooltext=toolText}}smartLabel.height=container.offsetHeight;smartLabel.width=container.offsetWidth;return smartLabel}else{smartLabel.error=new Error(\"Body Tag Missing!\");return smartLabel}};SmartLabelManager.prototype.getOriSize=function(){var text=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var detailedCalculationFlag=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!this._init){return false}if(text===undefined||text===null){text=\"\"}else if(typeof text!==\"string\"){text=text.toString()}var textArr,letter,lSize,i,l,cumulativeSize=0,height=0,container,indiSizeStore={},hasHTMLTag=config.hasHTMLTag,hasOnlyBrTag=config.hasOnlyBrTag;if(typeof hasHTMLTag===\"undefined\"){hasHTMLTag=slLib.xmlTagRegEx.test(text)}if(typeof hasOnlyBrTag===\"undefined\"){hasOnlyBrTag=slLib._hasOnlyBRTag(text)}this.requireDiv=hasHTMLTag&&!hasOnlyBrTag;if(!config.cleanText){text=text.replace(slLib.ltgtRegex,function(match){return match===\"&lt;\"?\"<\":\">\"})}this._updateStyle();container=this._container;if(hasOnlyBrTag){return slLib._getDimentionOfMultiLineText(text,this)}if(!detailedCalculationFlag){return this._calCharDimWithCache(text)}if(hasHTMLTag){container.innerHTML=text;return{width:container.offsetWidth,height:container.offsetHeight}}textArr=text.split(\"\");for(i=0,l=textArr.length;i<l;i++){letter=textArr[i];lSize=this._calCharDimWithCache(letter,false,textArr.length);height=max(height,lSize.height);cumulativeSize+=lSize.width;indiSizeStore[letter]=lSize.width}return{width:round(cumulativeSize),height:height,detailObj:indiSizeStore}};SmartLabelManager.prototype.dispose=function(){if(!this._init){return this}if(this._containerManager&&this._containerManager.dispose){this._containerManager.dispose()}delete this._container;delete this._context;delete this._cache;delete this._containerManager;delete this._containerObj;delete this.id;delete this.style;delete this.parentContainer;delete this._showNoEllipses;return this};export default SmartLabelManager;","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (field, value, classPrefix, margin) => {\n    const keyObj = {\n        value: field,\n        className: `${classPrefix}-tooltip-key`\n    };\n    if (margin !== undefined) {\n        keyObj.style = {\n            'margin-left': `${margin}px`\n        };\n    }\n    return [keyObj, {\n        value,\n        className: `${classPrefix}-tooltip-value`\n    }];\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue(displayName, formattedRetinalValue, classPrefix));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push([icon, formattedRetinalValue]));\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                content.push(hasMultipleMeasures ?\n                        getKeyValue(`${dName}${separator}`, value, classPrefix, margin) :\n                [icon, ...getKeyValue(formattedRetinalValue, value, classPrefix)\n                ]);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = 'table';\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const dataObj = nestedData[i];\n                const values = dataObj.values;\n                const field = getObjProp(schema, indices[index], 'name');\n\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(dataObj.key);\n                    content.push(getKeyValue(`${displayName}${separator}`, formattedValue, classPrefix));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue(`${displayName}${separator}`,\n                                fn(valueArr[fieldsConfig[name].index]), classPrefix));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = [\n    encodingFieldInf => !encodingFieldInf.xField || !encodingFieldInf.yField,\n    (encodingFieldInf, context, groupByField) => {\n        const fieldsConfig = context.data().getFieldsConfig();\n        return !groupByField || getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE;\n    },\n    encodingFieldInf => encodingFieldInf.xFieldType === FieldType.DIMENSION &&\n        encodingFieldInf.yFieldType === FieldType.DIMENSION,\n    (encodingFieldInf, context, groupByField) => {\n        const dimensionField = ['xField', 'yField'].find(type =>\n                encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n        return (dimensionField && encodingFieldInf[dimensionField] === groupByField);\n    }\n];\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates.some(fn => fn(encodingFieldInf, context, groupByField))) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const disabledSideEffects = [SIDE_EFFECTS.TOOLTIP, SIDE_EFFECTS.HIGHLIGHTER, SIDE_EFFECTS.ANCHORS,\n            SIDE_EFFECTS.BRUSH_ANCHORS, SIDE_EFFECTS.PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers: propagationInf.sourceIdentifiers,\n                            propagationData: propagationInf.data\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        const facetSortConfig = sortConfig[name];\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).sort(sortInfo, { saveChild: false }).getData().data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, LAYOUT_ALIGN, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}